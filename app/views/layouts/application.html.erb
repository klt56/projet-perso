<!DOCTYPE html>
<html>
  <head>
    <title>SiteNickel</title>
    <meta name="viewport" content="width=device-width,initial-scale=1">
    <%= csrf_meta_tags %>
    <%= csp_meta_tag %>
<script src="https://js.stripe.com/v3/"></script>
    <%= stylesheet_link_tag "application" %>
    <%= javascript_importmap_tags %>
  <%=stylesheet_link_tag("application.css") %>
   <%=stylesheet_link_tag("style.css") %>
   <%=stylesheet_link_tag("Room.css") %>
   <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC" crossorigin="anonymous">
   <%= stylesheet_link_tag 'application', media: 'all', 'data-turbolinks-track': 'reload' %>

  <style>
      <%= ".msg-#{current_user&.id}" %> {
      background-color: #007bff !important;
      padding: 10px;
      }
      <%= ".cont-#{current_user&.id}" %> {
      display: flex;
      justify-content: flex-end
      }
    </style>

</head>

  <body text= "black" style="background-image: url('https://static.vecteezy.com/ti/vecteur-libre/p1/3037585-abstrait-fond-d-ecran-et-fond-vecteur-vectoriel.jpg');width: 100vw; height: 100vh">
     
     <center>
      <p class="notice"><%= notice %></p>
    <p class="alert"><%= alert %></p>
    <%= link_to "Products_", products_path %>
    <%= link_to "Github_", "", target: "_blank" %>
    <% if current_user %>
      <%= link_to current_user.email, edit_user_registration_path %>
      <%= link_to "_déconnection_", destroy_user_session_path, method: :delete %>
      <%= current_user.stripe_customer_id %>
    <% else %>
      <%= link_to "-Connection_", new_user_session_path %>
      <%= link_to "S'inscrire", new_user_registration_path %>
    <% end %>
    </center>
    <hr>

    <h1><p><font color="white"><i>Shopping cart</i></p></h1>
    <% @cart.each do |product| %>
      <%= product.name %>
      <br>
         <% end %>
         <% if @cart.present? %>
    <%= button_to "Acheter maintenant !", checkout_create_path, remote: true, data: { disable_with: "validating..."} %>
          <% end %>
    <hr>
    <%= render "layouts/navbar"%>
    <% if notice %>
      <p class="alert alert-success"><%= notice %></p>
    <% end %>
    <% if alert %>
      <p class="alert alert-danger"><%= alert %></p>
    <% end %>
        <%= yield %>
  </body>
  

</div>
<div class="menu">
  <nav class="menu__nav">
    <ul class="menu__list r-list">
      <li class="menu__group">
       <i><%= link_to "nos articles",  static_pages_secret_path, method: :get, class:"menu__link r-link" %></i>
      </li>
      <li class="menu__group">
        <i><%= link_to "Se connecter", new_user_session_path, method: :get, class:"menu__link r-link" %></i>
      </li>
      <li class="menu__group">
        <i><%= link_to "s'inscrire", new_user_registration_path, method: :get, class:"menu__link r-link" %></i>
      </li>
       <li class="menu__group">
        <i><%= link_to "test", rooms_path, method: :get, class:"menu__link r-link" %></i>
      </li>
      <li class="menu__group">
        <i><%= link_to "Déconnection", destroy_user_session_path, method: :get, class:"menu__link r-link" %></i>
     </li>
      <li class="menu__group">
        <i><%= link_to "Vos articles",  new_product_path, method: :get, class:"menu__link r-link" %></i>
      </li>
    </ul>
  </nav>
  <button class="menu__toggle r-button" type="button">
    <span class="menu__hamburger m-hamburger">
      <span class="m-hamburger__label">
        <span class="menu__toggle-hint screen-reader">Open menu</span>
      </span>
    </span>
  </button>
</div>
<div class="linktr">
  </div>
<script>
/*
!!!!!
This code is created to display element's behavior. I'm not a JS expert so don't use it
!!!!!
*/
(function(){
  'use strict';

  class Menu {
    constructor(settings) {
      this.menuRootNode = settings.menuRootNode;
      this.isOpened = false;
    }
    
    changeMenuState(menuState) {
      return this.isOpened = !menuState;
    }
    
    changeToggleHint(toggleHint, toggleNode) {
      toggleNode.textContent = toggleHint;
      return toggleHint; 
    }
  }

  const menuClassesNames = {
    rootClass: 'menu',
    activeClass: 'menu_activated',
    toggleClass: 'menu__toggle',
    toggleHintClass: 'menu__toggle-hint'
  }
  
  const jsMenuNode = document.querySelector(`.${menuClassesNames.rootClass}`);
  const demoMenu = new Menu ({
    menuRootNode: jsMenuNode
  });
  
  function getCurrentToggleHint(currentMenuState) {
    return (currentMenuState !== true) ? 'Open menu' : 'Close menu';
  }
  
  function toggleMenu(event) {
    
      let currentMenuState = demoMenu.changeMenuState(demoMenu.isOpened);
      let toggleHint = getCurrentToggleHint(currentMenuState);
      
      demoMenu.changeToggleHint(
        toggleHint, 
        demoMenu.menuRootNode.querySelector(`.${menuClassesNames.toggleHintClass}`)
      );
      demoMenu.menuRootNode.classList.toggle(`${menuClassesNames.activeClass}`);
      
      return currentMenuState;  
  }
  
  jsMenuNode.querySelector(`.${menuClassesNames.toggleClass}`).addEventListener('click', toggleMenu);
})();
</script>

<script>
$('document').ready(function() {
  var screenHeight = $(window).height();
  var screenWidth = $(window).width();
  var navHeight = $('#main-nav').height();
  var contentHeight = screenHeight - navHeight;
  
  var delay = 300;
  $('.nav-item').each(function() {
    $(this).css('transition-delay', delay + 'ms');
    delay = delay + 100;
  });
  
  $('#mobile-nav').height(screenHeight);
  $('#content').css({
    'height': contentHeight,
    'margin-top': navHeight
  });

  $('.nav-item').each(function() {
    if ($(this).next().is('.sub-nav')) {
      $(this).addClass('arrowed');
    } else {};
  });
  $('#bun').click(function() {
    closeOut()
  });
  $('#content').click(function() {
    if ($('#container').hasClass('body-slide')) {
      closeOut()
    } else {};
  });
  $('.arrowed').click(function() {
    $(this).toggleClass('selected');
    $(this).siblings().removeClass("selected");
    $('.sub-nav').each(function() {
      $(this).slideUp("slow");
    });
    if ($(this).next('.sub-nav').is(':visible')) {
      $(this).next('.sub-nav').slideUp('slow');
    } else {
      $(this).next('.sub-nav').slideDown('slow');
    };
  });
});

function closeOut() {
  $('body').toggleClass('scroll-jam');
  $('#sidebar').toggleClass('nav-slide');
  $('#container').toggleClass('body-slide');
  $('.nav-item').toggleClass('item-slide');
  $('.nav-item').removeClass('selected');
  $('.sub-nav').each(function() {
    $(this).hide();
  });
    triangleRezise()
}

function triangleRezise(){
  if($('#container').hasClass('body-slide')) {
    $('.triangle').css('transition', '300ms ease');
    var screenHeight = $(window).height();
    var screenWidth = $(window).width();
    var navHeight = $('#main-nav').height();
    var triangleHeight = screenHeight - navHeight;
    var triangleWidth = screenWidth - 300;
    var triangleWidth = triangleWidth / 3;
    var triangleWidth = triangleWidth * 2;
    var triangleHeight = triangleHeight * 2;
    var triangleHeight = "" + triangleHeight + "px ";
    var triangleWidth = "" + triangleWidth + "px ";
    var triangle = triangleHeight + triangleWidth + "0px 0px";
    $('.triangle').css("border-width", triangle);
  }
  else{
    var screenHeight = $(window).height();
    var screenWidth = $(window).width();
    var navHeight = $('#main-nav').height();
    var triangleHeight = screenHeight - navHeight;
   var triangleWidth = screenWidth / 3;
  var triangleWidth = triangleWidth * 2;
  var triangleHeight = triangleHeight * 2;
  var triangleHeight = "" + triangleHeight + "px ";
  var triangleWidth = "" + triangleWidth + "px ";
  var triangle = triangleHeight + triangleWidth + "0px 0px";
  $('.triangle').css("border-width", triangle);
  setTimeout(function() {
    $('.triangle').css('transition', 'none');
  }, 300);
};
};
triangleRezise();
$(window).resize(function() {
  triangleRezise()
});

</script>

<script>
$.fn.boom = function(e) {
  var colors = [
    '#ffb3f6',
    '#7aa0ff',
    '#333',
    // '#FFD100',
    // '#FF9300',
    // '#FF7FA4'
  ];
  var shapes = [
    '<polygon class="star" points="21,0,28.053423027509677,11.29179606750063,40.97218684219823,14.510643118126104,32.412678195541844,24.70820393249937,33.34349029814194,37.989356881873896,21,33,8.656509701858067,37.989356881873896,9.587321804458158,24.70820393249937,1.0278131578017735,14.510643118126108,13.94657697249032,11.291796067500632"></polygon>', 
    // '<path class="circle" d="m 20 1 a 1 1 0 0 0 0 25 a 1 1 0 0 0 0 -25"></path>',
    '<polygon class="other-star" points="18,0,22.242640687119284,13.757359312880714,36,18,22.242640687119284,22.242640687119284,18.000000000000004,36,13.757359312880716,22.242640687119284,0,18.000000000000004,13.757359312880714,13.757359312880716"></polygon>',
    '<polygon class="diamond" points="18,0,27.192388155425117,8.80761184457488,36,18,27.19238815542512,27.192388155425117,18.000000000000004,36,8.807611844574883,27.19238815542512,0,18.000000000000004,8.80761184457488,8.807611844574884"></polygon>'
  ];

  var btn = $(this);
  var group = [];
  var num = Math.floor(Math.random() * 50) + 30;

  for(i = 0; i < num; i++) {
    var randBG = Math.floor(Math.random() * colors.length);
    var getShape = Math.floor(Math.random() * shapes.length);
    var c = Math.floor(Math.random() * 10) + 5;
    var scale = Math.floor(Math.random() * (8 - 4 + 1)) + 4;
    var x = Math.floor(Math.random() * (150 + 100)) - 100;
    var y = Math.floor(Math.random() * (150 + 100)) - 100;
    var sec = Math.floor(Math.random() * 1700) + 1000;
    var cir = $('<div class="cir"></div>');
    var shape = $('<svg class="shape">'+shapes[getShape]+'</svg>');
    
    shape.css({
      top: e.pageY - btn.offset().top + 20,
      left: e.pageX - btn.offset().left + 40,
      'transform': 'scale(0.'+scale+')',
      'transition': sec + 'ms',
      'fill': colors[randBG]
    });

    btn.siblings('.btn-particles').append(shape);

    group.push({shape: shape, x: x, y: y});
  }
  
  for (var a = 0; a < group.length; a++) {
    var shape = group[a].shape;
    var x = group[a].x, y = group[a].y;
    shape.css({
      left: x + 50,
      top: y + 15,
      'transform': 'scale(0)'
    });
  }
  
  setTimeout(function() {
    for (var b = 0; b < group.length; b++) {
      var shape = group[b].shape;
      shape.remove();
    }
    group = [];
  }, 2000);

} 

$(function() {
  $(document).on('click', '.btn', function(e) {
    $(this).boom(e);
  });

});
</script>


</html>
